{"ast":null,"code":"var _jsxFileName = \"/home/roxana/React-Project/crud/src/components/table/TableView.js\";\nimport React from 'react';\nimport Parse from 'parse';\nimport { Map } from 'immutable';\nimport { Table, Divider, Button, Input, Icon, Row, Col, PageHeader, Modal, Tree } from 'antd';\nimport tableController from './tableController';\nimport OprandView from '../oprand/OprandView';\nconst fields = Map({\n  name: 'string',\n  id: 'number',\n  date: 'time',\n  boolean: 'boolean'\n});\nconst constraints = Map({\n  string: ['Contains', 'StartsWith', 'EndsWith', 'EqualTo', 'NotEqualTo', 'GreaterThan', 'LessThan', 'GreaterThanOrEqualTo', 'LessThanOrEqualTo', 'IsEmpty', 'NotIsEmpty', 'IsNull', 'NotIsNull'],\n  number: ['EqualTo', 'NotEqualTo', 'GreaterThan', 'LessThan', 'GreaterThanOrEqualTo', 'LessThanOrEqualTo', 'IsNull', 'NotIsNull'],\n  time: ['EqualTo', 'NotEqualTo', 'GreaterThan', 'LessThan', 'GreaterThanOrEqualTo', 'LessThanOrEqualTo', 'IsNull', 'NotIsNull'],\n  boolean: [],\n  default: ['EqualTo', 'NotEqualTo', 'GreaterThan', 'LessThan', 'GreaterThanOrEqualTo', 'LessThanOrEqualTo', 'IsNull', 'NotIsNull']\n});\nconst {\n  TreeNode\n} = Tree;\nconst ClouseQuery = Parse.Object.extend('ClouseQuery');\nconst mainQuery = new Parse.Query(ClouseQuery);\nconst filterData = {\n  op: 'and',\n  childs: [],\n  mainQuery,\n  searchResults: []\n};\n\nconst TableView = () => {\n  const {\n    data,\n    addPerson,\n    setPersonName,\n    deletePerson,\n    editPerson,\n    confirmEdit,\n    makeMainQuery,\n    showDatafilter,\n    closeDatafilter\n  } = tableController();\n  const columns = [{\n    title: 'objectId',\n    dataIndex: 'objectId',\n    key: 'objectId'\n  }, {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, text)\n  }, {\n    title: 'createdAt',\n    dataIndex: 'createdAt',\n    key: 'createdAt'\n  }, {\n    title: 'updatedAt',\n    dataIndex: 'updatedAt',\n    key: 'updatedAt'\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"delete\",\n      key: \"delete\",\n      onClick: () => deletePerson(record.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      type: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      type: \"edit\",\n      key: \"edit\",\n      onClick: () => editPerson(record.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))\n  }];\n  const dataSource = data.personsList.map((item, key) => ({ ...item.toJSON(),\n    key\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(PageHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => showDatafilter(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Search\"), React.createElement(Modal, {\n    footer: [React.createElement(Button, {\n      key: \"Cancle\",\n      onClick: () => closeDatafilter(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Cancle\"), React.createElement(Button, {\n      key: \"Search\",\n      type: \"primary\",\n      onClick: () => makeMainQuery(data.tmpdata),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Submit\")],\n    visible: data.dataFilterVisible,\n    title: \"Search\",\n    onCancel: () => closeDatafilter(),\n    onOk: () => makeMainQuery(data.tmpdata),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(OprandView, {\n    makeMainQuery: makeMainQuery,\n    filterData: filterData,\n    constraints: constraints,\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    style: {\n      padding: 24\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, data.editing && React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Edit Mode\"), React.createElement(Input, {\n    placeholder: \"name\",\n    value: data.personName,\n    onChange: e => setPersonName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })), React.createElement(Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, !data.editing && React.createElement(Button, {\n    onClick: () => addPerson(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"add\"), data.editing && React.createElement(Button, {\n    onClick: () => confirmEdit(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"confirm edit\"))), React.createElement(Row, {\n    style: {\n      padding: 24\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Table, {\n    columns: columns,\n    dataSource: dataSource,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }))));\n};\n\nexport default TableView;","map":{"version":3,"sources":["/home/roxana/React-Project/crud/src/components/table/TableView.js"],"names":["React","Parse","Map","Table","Divider","Button","Input","Icon","Row","Col","PageHeader","Modal","Tree","tableController","OprandView","fields","name","id","date","boolean","constraints","string","number","time","default","TreeNode","ClouseQuery","Object","extend","mainQuery","Query","filterData","op","childs","searchResults","TableView","data","addPerson","setPersonName","deletePerson","editPerson","confirmEdit","makeMainQuery","showDatafilter","closeDatafilter","columns","title","dataIndex","key","render","text","record","dataSource","personsList","map","item","toJSON","tmpdata","dataFilterVisible","padding","editing","personName","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Parse from 'parse';\nimport { Map } from 'immutable';\nimport {\n  Table, Divider, Button, Input, Icon, Row, Col, PageHeader, Modal, Tree,\n} from 'antd';\nimport tableController from './tableController';\nimport OprandView from '../oprand/OprandView';\n\n\nconst fields = Map({\n  name: 'string',\n  id: 'number',\n  date: 'time',\n  boolean: 'boolean',\n});\n\nconst constraints = Map({\n  string: [\n    'Contains',\n    'StartsWith',\n    'EndsWith',\n    'EqualTo',\n    'NotEqualTo',\n    'GreaterThan',\n    'LessThan',\n    'GreaterThanOrEqualTo',\n    'LessThanOrEqualTo',\n    'IsEmpty',\n    'NotIsEmpty',\n    'IsNull',\n    'NotIsNull',\n  ],\n  number: [\n    'EqualTo',\n    'NotEqualTo',\n    'GreaterThan',\n    'LessThan',\n    'GreaterThanOrEqualTo',\n    'LessThanOrEqualTo',\n    'IsNull',\n    'NotIsNull',\n  ],\n  time: [\n    'EqualTo',\n    'NotEqualTo',\n    'GreaterThan',\n    'LessThan',\n    'GreaterThanOrEqualTo',\n    'LessThanOrEqualTo',\n    'IsNull',\n    'NotIsNull',\n  ],\n  boolean: [],\n  default: [\n    'EqualTo',\n    'NotEqualTo',\n    'GreaterThan',\n    'LessThan',\n    'GreaterThanOrEqualTo',\n    'LessThanOrEqualTo',\n    'IsNull',\n    'NotIsNull',\n  ],\n});\n\nconst { TreeNode } = Tree;\n\nconst ClouseQuery = Parse.Object.extend('ClouseQuery');\n\nconst mainQuery = new Parse.Query(ClouseQuery);\n\nconst filterData = {\n  op: 'and',\n  childs: [],\n  mainQuery,\n  searchResults: [],\n};\n\n\nconst TableView = () => {\n  const {\n    data,\n    addPerson,\n    setPersonName,\n    deletePerson,\n    editPerson,\n    confirmEdit,\n    makeMainQuery,\n    showDatafilter,\n    closeDatafilter,\n  } = tableController();\n\n\n  const columns = [\n    {\n      title: 'objectId',\n      dataIndex: 'objectId',\n      key: 'objectId',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text) => <a>{text}</a>,\n    },\n    {\n      title: 'createdAt',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n    },\n    {\n      title: 'updatedAt',\n      dataIndex: 'updatedAt',\n      key: 'updatedAt',\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) => (\n        <span>\n          <Icon type=\"delete\" key=\"delete\" onClick={() => deletePerson(record.key)} />\n          <Divider type=\"vertical\" />\n          <Icon type=\"edit\" key=\"edit\" onClick={() => editPerson(record.key)} />\n        </span>\n      ),\n    },\n  ];\n\n  const dataSource = data.personsList.map((item, key) => ({\n    ...item.toJSON(),\n    key,\n  }));\n\n  return (\n    <div>\n      <PageHeader>\n        <Button onClick={() => showDatafilter()}>Search</Button>\n        <Modal\n          footer={[\n            <Button key=\"Cancle\" onClick={() => closeDatafilter()}>\n              Cancle\n            </Button>,\n            <Button key=\"Search\" type=\"primary\" onClick={() => makeMainQuery(data.tmpdata)}>\n              Submit\n            </Button>,\n          ]}\n          visible={data.dataFilterVisible}\n          title=\"Search\"\n          onCancel={() => closeDatafilter()}\n          onOk={() => makeMainQuery(data.tmpdata)}\n        >\n          <OprandView\n            makeMainQuery={makeMainQuery}\n            filterData={filterData}\n            constraints={constraints}\n            fields={fields}\n          />\n        </Modal>\n      </PageHeader>\n\n      <Row style={{ padding: 24 }}>\n        <Col span={8}>\n          {data.editing\n            && <h1>Edit Mode</h1>}\n          <Input placeholder=\"name\" value={data.personName} onChange={(e) => setPersonName(e.target.value)} />\n        </Col>\n        <Col span={8}>\n          {!data.editing\n            && <Button onClick={() => addPerson()}>add</Button>}\n          {data.editing\n            && <Button onClick={() => confirmEdit()}>confirm edit</Button>}\n        </Col>\n      </Row>\n      <Row style={{ padding: 24 }}>\n        <Col span={12}>\n          <Table columns={columns} dataSource={dataSource} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default TableView;\n"]},"metadata":{},"sourceType":"module"}