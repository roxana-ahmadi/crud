{"ast":null,"code":"var _jsxFileName = \"/home/roxana/React-Project/crud/src/components/table/TableView.js\";\nimport React from 'react';\nimport Parse from \"parse\";\nimport { Map } from \"immutable\";\nimport { Table, Divider, Button, Input, Icon, Row, Col } from 'antd';\nimport tableController from './tableController';\nimport OprandView from '../oprand/OprandView';\nconst fields = Map({\n  name: \"string\",\n  id: \"number\",\n  date: \"time\",\n  boolean: \"boolean\"\n});\nconst constraints = Map({\n  string: [\"Contains\", \"StartsWith\", \"EndsWith\", \"EqualTo\", \"NotEqualTo\", \"GreaterThan\", \"LessThan\", \"GreaterThanOrEqualTo\", \"LessThanOrEqualTo\", \"IsEmpty\", \"NotIsEmpty\", \"IsNull\", \"NotIsNull\"],\n  number: [\"EqualTo\", \"NotEqualTo\", \"GreaterThan\", \"LessThan\", \"GreaterThanOrEqualTo\", \"LessThanOrEqualTo\", \"IsNull\", \"NotIsNull\"],\n  time: [\"EqualTo\", \"NotEqualTo\", \"GreaterThan\", \"LessThan\", \"GreaterThanOrEqualTo\", \"LessThanOrEqualTo\", \"IsNull\", \"NotIsNull\"],\n  boolean: [],\n  default: [\"EqualTo\", \"NotEqualTo\", \"GreaterThan\", \"LessThan\", \"GreaterThanOrEqualTo\", \"LessThanOrEqualTo\", \"IsNull\", \"NotIsNull\"]\n});\n\nconst TableView = props => {\n  const {\n    data,\n    addPerson,\n    setPersonName,\n    deletePerson,\n    editPerson,\n    confirmEdit\n  } = tableController();\n  const {\n    filterData\n  } = props;\n  const columns = [{\n    title: 'objectId',\n    dataIndex: 'objectId',\n    key: 'objectId'\n  }, {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, text)\n  }, {\n    title: 'createdAt',\n    dataIndex: 'createdAt',\n    key: 'createdAt'\n  }, {\n    title: 'updatedAt',\n    dataIndex: 'updatedAt',\n    key: 'updatedAt'\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"delete\",\n      key: \"delete\",\n      onClick: () => deletePerson(record.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      type: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      type: \"edit\",\n      key: \"edit\",\n      onClick: () => editPerson(record.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))\n  }];\n  let tmpdata;\n\n  const makeMainQuery = oprandData => {\n    console.log('oprandata', oprandData);\n    let mainQuery = new Parse.Query(ClouseQuery);\n\n    if (oprandData.op === \"and\") {\n      oprandData.childs.map(item => {\n        if (!item.childs) {\n          mainQuery = Parse.Query.and(mainQuery, item);\n        } else {\n          mainQuery = Parse.Query.and(mainQuery, item.mainQuery);\n        }\n      });\n    } else {\n      oprandData.childs.map(item => {\n        if (!item.childs) {\n          mainQuery = Parse.Query.or(mainQuery, item);\n        } else {\n          mainQuery = Parse.Query.or(mainQuery, item.mainQuery);\n        }\n      });\n    }\n\n    filterData.mainQuery = mainQuery;\n    console.log(mainQuery, 'mainQuery');\n    tmpdata = oprandData;\n    mainQuery.find().then(result => {\n      console.log(result, 'res');\n      filterData.searchResults = result;\n    });\n    console.log(filterData.searchResults, 'app');\n  };\n\n  console.log(filterData.searchResults, 'table');\n  const dataSource = data.personsList.map((item, key) => {\n    return { ...item.toJSON(),\n      key\n    };\n  });\n  return React.createElement(\"div\", {\n    style: {\n      padding: 24\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => makeMainQuery(filterData),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Search\"), React.createElement(OprandView, {\n    makeMainQuery: makeMainQuery,\n    filterData: filterData,\n    constraints: constraints,\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, data.editing && React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Edit Mode\"), React.createElement(Input, {\n    placeholder: \"name\",\n    value: data.personName,\n    onChange: e => setPersonName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, !data.editing && React.createElement(Button, {\n    onClick: () => addPerson(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"add\"), data.editing && React.createElement(Button, {\n    onClick: () => confirmEdit(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"confirm edit\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(Table, {\n    style: {\n      padding: 24\n    },\n    columns: columns,\n    dataSource: dataSource,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }))));\n};\n\nexport default TableView;","map":{"version":3,"sources":["/home/roxana/React-Project/crud/src/components/table/TableView.js"],"names":["React","Parse","Map","Table","Divider","Button","Input","Icon","Row","Col","tableController","OprandView","fields","name","id","date","boolean","constraints","string","number","time","default","TableView","props","data","addPerson","setPersonName","deletePerson","editPerson","confirmEdit","filterData","columns","title","dataIndex","key","render","text","record","tmpdata","makeMainQuery","oprandData","console","log","mainQuery","Query","ClouseQuery","op","childs","map","item","and","or","find","then","result","searchResults","dataSource","personsList","toJSON","padding","editing","personName","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Parse from \"parse\";\nimport { Map } from \"immutable\";\nimport { Table, Divider, Button, Input, Icon, Row, Col } from 'antd';\nimport tableController from './tableController';\nimport OprandView from '../oprand/OprandView';\n\n\nconst fields = Map({\n  name: \"string\",\n  id: \"number\",\n  date: \"time\",\n  boolean: \"boolean\"\n});\n\nconst constraints = Map({\n  string: [\n    \"Contains\",\n    \"StartsWith\",\n    \"EndsWith\",\n    \"EqualTo\",\n    \"NotEqualTo\",\n    \"GreaterThan\",\n    \"LessThan\",\n    \"GreaterThanOrEqualTo\",\n    \"LessThanOrEqualTo\",\n    \"IsEmpty\",\n    \"NotIsEmpty\",\n    \"IsNull\",\n    \"NotIsNull\"\n  ],\n  number: [\n    \"EqualTo\",\n    \"NotEqualTo\",\n    \"GreaterThan\",\n    \"LessThan\",\n    \"GreaterThanOrEqualTo\",\n    \"LessThanOrEqualTo\",\n    \"IsNull\",\n    \"NotIsNull\"\n  ],\n  time: [\n    \"EqualTo\",\n    \"NotEqualTo\",\n    \"GreaterThan\",\n    \"LessThan\",\n    \"GreaterThanOrEqualTo\",\n    \"LessThanOrEqualTo\",\n    \"IsNull\",\n    \"NotIsNull\"\n  ],\n  boolean: [],\n  default: [\n    \"EqualTo\",\n    \"NotEqualTo\",\n    \"GreaterThan\",\n    \"LessThan\",\n    \"GreaterThanOrEqualTo\",\n    \"LessThanOrEqualTo\",\n    \"IsNull\",\n    \"NotIsNull\"\n  ]\n});\n\n\nconst TableView = (props) => {\n  const {\n    data,\n    addPerson,\n    setPersonName,\n    deletePerson,\n    editPerson,\n    confirmEdit,\n  } = tableController();\n\nconst {filterData} = props\n  const columns = [\n    {\n      title: 'objectId',\n      dataIndex: 'objectId',\n      key: 'objectId',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: text => <a>{text}</a>,\n    },\n    {\n      title: 'createdAt',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n    },\n    {\n      title: 'updatedAt',\n      dataIndex: 'updatedAt',\n      key: 'updatedAt',\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) => (\n        <span>\n          <Icon type=\"delete\" key=\"delete\" onClick={() => deletePerson(record.key)}></Icon>\n          <Divider type=\"vertical\" />\n          <Icon type=\"edit\" key=\"edit\" onClick={() => editPerson(record.key)}></Icon>\n        </span>\n      ),\n    },\n  ];\n\n  \n  let tmpdata;\n\n  const makeMainQuery = (oprandData) => {\n    console.log('oprandata',oprandData)\n    let mainQuery = new Parse.Query(ClouseQuery);\n    if (oprandData.op === \"and\") {\n      oprandData.childs.map(item => {\n        if (!item.childs) {\n          mainQuery = Parse.Query.and(mainQuery, item);\n        } else {\n          mainQuery = Parse.Query.and(mainQuery, item.mainQuery);\n        }\n      });\n    } else {\n      oprandData.childs.map(item => {\n        if (!item.childs) {\n          mainQuery = Parse.Query.or(mainQuery, item);\n        } else {\n          mainQuery = Parse.Query.or(mainQuery, item.mainQuery);\n        }\n      });\n    }\n    filterData.mainQuery = mainQuery;\n      console.log(mainQuery,'mainQuery')\n      tmpdata = oprandData;\n    mainQuery.find().then(result => {\n      console.log(result,'res')\n      filterData.searchResults = result\n    });\n    console.log(filterData.searchResults, 'app')\n  };\n\n  console.log(filterData.searchResults, 'table')\n\n\n  const dataSource = data.personsList.map((item, key) => {\n    return {\n      ...item.toJSON(),\n      key,\n    }\n  })\n\n\n  return (\n    <div style={{ padding: 24 }}>\n      <Button onClick={() => makeMainQuery(filterData)}>Search</Button>\n      <OprandView\n        makeMainQuery={makeMainQuery}\n        filterData={filterData}\n        constraints={constraints}\n        fields={fields}\n      />\n\n      <Row>\n        <Col span={8}>\n          {data.editing &&\n            <h1>Edit Mode</h1>\n          }\n          <Input placeholder=\"name\" value={data.personName} onChange={(e) => setPersonName(e.target.value)} />\n        </Col>\n        <Col span={8}>\n          {!data.editing &&\n            <Button onClick={() => addPerson()}>add</Button>\n          }\n          {data.editing &&\n            <Button onClick={() => confirmEdit()}>confirm edit</Button>\n          }\n        </Col>\n      </Row>\n      <Row>\n        <Col span={12}>\n          <Table style={{ padding: 24 }} columns={columns} dataSource={dataSource} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default TableView;\n"]},"metadata":{},"sourceType":"module"}