{"ast":null,"code":"var _jsxFileName = \"/home/roxana/React-Project/crud/src/components/clouse/ClouseView.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Input, DatePicker, Select, Switch } from 'antd';\nimport clouseController from './clouseController';\nconst InputGroup = Input.Group;\nconst {\n  Option\n} = Select;\n\nconst fieldOptions = fields => {\n  const fieldNames = Array.from(fields.keys());\n  return fieldNames.map((item, index) => React.createElement(Option, {\n    key: index,\n    value: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, item.toUpperCase()));\n};\n\nconst constraintOptions = (constraints, fields, fieldName) => {\n  const fieldType = fields.get(fieldName);\n  const constrains = Array.from(constraints.get(fieldType));\n  return constrains.map((item, index) => React.createElement(Option, {\n    key: index,\n    value: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, item.toUpperCase()));\n};\n\nconst ClouseView = props => {\n  const {\n    deleteClouse,\n    queryIndex,\n    fields,\n    constraints\n  } = props;\n  const {\n    setFieldName,\n    data,\n    setConstraint,\n    setFieldValue\n  } = clouseController(props);\n  const jSonQuery = data.query.toJSON();\n\n  const generateInputByType = fieldType => {\n    switch (fieldType) {\n      case 'string':\n        if (data.query.toJSON().where[fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName)]) {\n          return React.createElement(Input, {\n            value: String(data.query.toJSON().where[fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName)]),\n            style: {\n              width: '20vw'\n            },\n            placeholder: \"String\",\n            onChange: e => setFieldValue(e.target.value),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(Input, {\n          style: {\n            width: '20vw'\n          },\n          placeholder: \"String\",\n          onChange: e => setFieldValue(e.target.value),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n\n      case 'time':\n        if (data.query.toJSON().where[fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName)]) {\n          return React.createElement(DatePicker, {\n            defaultValue: moment(String(data.query.toJSON().where[fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName)]), 'YYYYMMDD'),\n            style: {\n              width: '10vw'\n            },\n            onChange: (date, dateString) => setFieldValue(dateString),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(DatePicker, {\n          style: {\n            width: '10vw'\n          },\n          onChange: (date, dateString) => setFieldValue(dateString),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n\n      case 'number':\n        if (data.query.toJSON().where[fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName)]) {\n          return React.createElement(Input, {\n            value: data.query.toJSON().where[fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName)],\n            style: {\n              width: '10vw'\n            },\n            placeholder: \"Number\",\n            type: \"number\",\n            onChange: e => setFieldValue(Number(e.target.value)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(Input, {\n          style: {\n            width: '10vw'\n          },\n          placeholder: \"Number\",\n          type: \"number\",\n          onChange: e => setFieldValue(Number(e.target.value)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        });\n\n      case 'boolean':\n        if (data.query.toJSON().where[fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName)]) {\n          return React.createElement(Switch, {\n            checked: Boolean(data.query.toJSON().where[fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName)]),\n            style: {\n              marginLeft: '10px'\n            },\n            onChange: e => setFieldValue(e),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(Switch, {\n          style: {\n            marginLeft: '10px'\n          },\n          onChange: e => setFieldValue(e),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(Input, {\n          style: {\n            width: '10vw'\n          },\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        });\n    }\n  };\n\n  return React.createElement(InputGroup, {\n    compact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Select, {\n    style: {\n      width: '5vw'\n    },\n    defaultValue: Object.keys(jSonQuery.where)[0] || 'name',\n    onChange: value => setFieldName(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, fieldOptions(fields)), React.createElement(Select, {\n    style: {\n      width: '7vw'\n    },\n    defaultValue: \"EqualTo\",\n    onChange: value => setConstraint(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, constraintOptions(constraints, fields, data.fieldName)), generateInputByType(fields.get(Object.keys(jSonQuery.where)[0] || data.fieldName)), React.createElement(Button, {\n    icon: \"close\",\n    onClick: () => deleteClouse(queryIndex),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })));\n};\n\nClouseView.propTypes = {\n  deleteClouse: PropTypes.func.isRequired,\n  queryIndex: PropTypes.number.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  fields: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  constraints: PropTypes.object.isRequired\n};\nexport default ClouseView;","map":{"version":3,"sources":["/home/roxana/React-Project/crud/src/components/clouse/ClouseView.jsx"],"names":["React","PropTypes","Button","Input","DatePicker","Select","Switch","clouseController","InputGroup","Group","Option","fieldOptions","fields","fieldNames","Array","from","keys","map","item","index","toUpperCase","constraintOptions","constraints","fieldName","fieldType","get","constrains","ClouseView","props","deleteClouse","queryIndex","setFieldName","data","setConstraint","setFieldValue","jSonQuery","query","toJSON","generateInputByType","where","Object","String","width","e","target","value","moment","date","dateString","Number","Boolean","marginLeft","propTypes","func","isRequired","number","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Input, DatePicker, Select, Switch,\n} from 'antd';\nimport clouseController from './clouseController';\n\nconst InputGroup = Input.Group;\nconst { Option } = Select;\n\nconst fieldOptions = (fields) => {\n  const fieldNames = Array.from(fields.keys());\n  return fieldNames.map((item, index) => (\n    <Option\n      key={index}\n      value={item}\n    >\n      {item.toUpperCase()}\n    </Option>\n  ));\n};\n\nconst constraintOptions = (constraints, fields, fieldName) => {\n  const fieldType = fields.get(fieldName);\n  const constrains = Array.from(constraints.get(fieldType));\n  return constrains.map((item, index) => (\n    <Option\n      key={index}\n      value={item}\n    >\n      {item.toUpperCase()}\n    </Option>\n  ));\n};\n\nconst ClouseView = (props) => {\n  const {\n    deleteClouse,\n    queryIndex,\n    fields,\n    constraints,\n\n  } = props;\n  const {\n    setFieldName,\n    data,\n    setConstraint,\n    setFieldValue,\n  } = clouseController(props);\n\n  const jSonQuery = data.query.toJSON();\n  const generateInputByType = (fieldType) => {\n    switch (fieldType) {\n      case 'string':\n        if (data.query.toJSON().where[(fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName))]) {\n          return (\n            <Input\n              value={String(data.query.toJSON().where[(fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName))])}\n              style={{ width: '20vw' }}\n              placeholder=\"String\"\n              onChange={(e) => setFieldValue(e.target.value)}\n            />\n          );\n        }\n        return (\n          <Input\n            style={{ width: '20vw' }}\n            placeholder=\"String\"\n            onChange={(e) => setFieldValue(e.target.value)}\n          />\n        );\n\n      case 'time':\n        if (data.query.toJSON().where[(fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName))]) {\n          return (\n            <DatePicker\n              defaultValue={moment(String(data.query.toJSON().where[(fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName))]), 'YYYYMMDD')}\n              style={{ width: '10vw' }}\n              onChange={(date, dateString) => setFieldValue(dateString)}\n            />\n          );\n        }\n        return (\n          <DatePicker\n            style={{ width: '10vw' }}\n            onChange={(date, dateString) => setFieldValue(dateString)}\n          />\n        );\n\n      case 'number':\n        if (data.query.toJSON().where[(fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName))]) {\n          return (\n            <Input\n              value={data.query.toJSON().where[(fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName))]}\n              style={{ width: '10vw' }}\n              placeholder=\"Number\"\n              type=\"number\"\n              onChange={(e) => setFieldValue(Number(e.target.value))}\n            />\n          );\n        }\n        return (\n          <Input\n            style={{ width: '10vw' }}\n            placeholder=\"Number\"\n            type=\"number\"\n            onChange={(e) => setFieldValue(Number(e.target.value))}\n          />\n        );\n\n      case 'boolean':\n        if (data.query.toJSON().where[(fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName))]) {\n          return (\n            <Switch\n              checked={Boolean(data.query.toJSON().where[(fields.get(Object.keys(data.query.toJSON().where)[0] || data.fieldName))])}\n              style={{ marginLeft: '10px' }}\n              onChange={(e) => setFieldValue(e)}\n            />\n          );\n        }\n        return (\n          <Switch\n            style={{ marginLeft: '10px' }}\n            onChange={(e) => setFieldValue(e)}\n          />\n        );\n\n\n      default:\n        return <Input style={{ width: '10vw' }} disabled />;\n    }\n  };\n\n\n  return (\n    <InputGroup compact>\n      <span>\n        <Select\n          style={{ width: '5vw' }}\n          defaultValue={Object.keys(jSonQuery.where)[0] || 'name'}\n          onChange={(value) => setFieldName(value)}\n        >\n          {fieldOptions(fields)}\n        </Select>\n        <Select\n          style={{ width: '7vw' }}\n          defaultValue=\"EqualTo\"\n          onChange={(value) => setConstraint(value)}\n        >\n          {constraintOptions(constraints, fields, data.fieldName)}\n        </Select>\n        {generateInputByType((fields.get(Object.keys(jSonQuery.where)[0] || data.fieldName)))}\n        <Button icon=\"close\" onClick={() => deleteClouse(queryIndex)} />\n      </span>\n    </InputGroup>\n  );\n};\n\n\nClouseView.propTypes = {\n  deleteClouse: PropTypes.func.isRequired,\n  queryIndex: PropTypes.number.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  fields: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  constraints: PropTypes.object.isRequired,\n\n};\n\nexport default ClouseView;\n"]},"metadata":{},"sourceType":"module"}