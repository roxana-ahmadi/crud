{"ast":null,"code":"var _jsxFileName = \"/home/roxana/React-Project/crud/src/components/oprand/OprandView.jsx\";\n\n/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Button, Input, Select, Tree } from 'antd';\nimport oprandController from './oprandController';\nimport ClouseView from '../clouse/ClouseView';\nimport filterIcon from '../../svg/filter-icon';\nconst InputGroup = Input.Group;\nconst {\n  Option\n} = Select;\nconst {\n  TreeNode\n} = Tree;\n\nconst OprandView = props => {\n  const {\n    addClouse,\n    deleteChild,\n    changeOprand,\n    addOprand,\n    data\n  } = oprandController(props);\n  const {\n    fields,\n    constraints,\n    operandIndex,\n    deleteOprand,\n    makeMainQuery\n  } = props;\n\n  const OprandNode = () => React.createElement(InputGroup, {\n    compact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Select, {\n    defaultValue: data.op,\n    onChange: value => changeOprand(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Option, {\n    value: \"and\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"And\"), React.createElement(Option, {\n    value: \"or\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Or\")), React.createElement(Button, {\n    icon: \"plus\",\n    onClick: () => addClouse(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => addOprand(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    component: filterIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(Button, {\n    icon: \"close\",\n    onClick: () => deleteOprand(operandIndex),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n\n  return React.createElement(React.Fragment, null, React.createElement(Tree, {\n    defaultExpandAll: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(TreeNode, {\n    title: React.createElement(OprandNode, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, data.childs.map((item, index) => {\n    if (item.op && item.childs.length >= 0) {\n      return React.createElement(TreeNode, {\n        key: index,\n        title: React.createElement(OprandView, {\n          makeMainQuery: makeMainQuery,\n          filterData: item,\n          deleteOprand: deleteChild,\n          constraints: props.constraints,\n          fields: props.fields,\n          operandIndex: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    }\n\n    if (item) {\n      return React.createElement(TreeNode // eslint-disable-next-line react/no-array-index-key\n      , {\n        key: index,\n        title: React.createElement(ClouseView, {\n          deleteClouse: deleteChild,\n          queryIndex: index,\n          query: item,\n          fields: fields,\n          constraints: constraints,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      });\n    }\n  }))));\n};\n\nOprandView.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  fields: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  constraints: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  operandIndex: PropTypes.object.isRequired,\n  deleteOprand: PropTypes.func.isRequired,\n  makeMainQuery: PropTypes.func.isRequired\n};\nexport default OprandView;","map":{"version":3,"sources":["/home/roxana/React-Project/crud/src/components/oprand/OprandView.jsx"],"names":["React","PropTypes","Icon","Button","Input","Select","Tree","oprandController","ClouseView","filterIcon","InputGroup","Group","Option","TreeNode","OprandView","props","addClouse","deleteChild","changeOprand","addOprand","data","fields","constraints","operandIndex","deleteOprand","makeMainQuery","OprandNode","op","value","childs","map","item","index","length","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Icon, Button, Input, Select, Tree,\n} from 'antd';\nimport oprandController from './oprandController';\nimport ClouseView from '../clouse/ClouseView';\nimport filterIcon from '../../svg/filter-icon';\n\nconst InputGroup = Input.Group;\nconst { Option } = Select;\nconst { TreeNode } = Tree;\n\nconst OprandView = (props) => {\n  const {\n    addClouse,\n    deleteChild,\n    changeOprand,\n    addOprand,\n    data,\n  } = oprandController(props);\n  const {\n    fields,\n    constraints,\n    operandIndex,\n    deleteOprand,\n    makeMainQuery,\n  } = (props);\n\n  const OprandNode = () => (\n    <InputGroup compact>\n      <Select defaultValue={data.op} onChange={(value) => changeOprand(value)}>\n        <Option value=\"and\">And</Option>\n        <Option value=\"or\">Or</Option>\n      </Select>\n      <Button icon=\"plus\" onClick={() => addClouse()} />\n      <Button onClick={() => addOprand()}>\n        <Icon component={filterIcon} />\n      </Button>\n      <Button icon=\"close\" onClick={() => deleteOprand(operandIndex)} />\n    </InputGroup>\n  );\n\n  return (\n    <>\n\n      <Tree\n\n        defaultExpandAll\n      >\n        <TreeNode title={<OprandNode />}>\n          {\n            data.childs.map((item, index) => {\n              if (item.op && (item.childs.length >= 0)) {\n                return (\n                  <TreeNode\n                    key={index}\n                    title={(\n                      <OprandView\n                        makeMainQuery={makeMainQuery}\n                        filterData={item}\n                        deleteOprand={deleteChild}\n                        constraints={props.constraints}\n                        fields={props.fields}\n                        operandIndex={index}\n                      />\n                    )}\n                  />\n                );\n              }\n              if (item) {\n                return (\n                  <TreeNode\n                    // eslint-disable-next-line react/no-array-index-key\n                    key={index}\n                    title={(\n                      <ClouseView\n                        deleteClouse={deleteChild}\n                        queryIndex={index}\n                        query={item}\n                        fields={fields}\n                        constraints={constraints}\n                      />\n                    )}\n                  />\n                );\n              }\n            })\n          }\n        </TreeNode>\n      </Tree>\n\n    </>\n  );\n};\n\nOprandView.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  fields: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  constraints: PropTypes.object.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  operandIndex: PropTypes.object.isRequired,\n  deleteOprand: PropTypes.func.isRequired,\n  makeMainQuery: PropTypes.func.isRequired,\n\n\n};\n\nexport default OprandView;\n"]},"metadata":{},"sourceType":"module"}