{"ast":null,"code":"/*\n * Copyright (c) 2019-present, The Yumcoder Authors. All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\nimport { useMemo } from 'react';\n\nconst withHandlers = handlers => (props = {}) => {\n  const realHandlers = useMemo(() => typeof handlers === 'function' ? handlers(props) : handlers, [] // eslint-disable-line\n  );\n  const actionTypes = Object.keys(realHandlers);\n  const boundHandlers = actionTypes.reduce((obj, type) => Object.assign(obj, {\n    // note: handler = (props) => (payload) => {}\n    [type]: (...payload) => realHandlers[type](props)(...payload)\n  }), {});\n  return { ...props,\n    ...boundHandlers\n  };\n};\n\nexport default withHandlers;","map":{"version":3,"sources":["/home/roxana/React-Project/datafilter/src/util/withHandlers.js"],"names":["useMemo","withHandlers","handlers","props","realHandlers","actionTypes","Object","keys","boundHandlers","reduce","obj","type","assign","payload"],"mappings":"AAAA;;;;;;AAMA,SAASA,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,YAAY,GAAGC,QAAQ,IAAI,CAACC,KAAK,GAAG,EAAT,KAAgB;AAC/C,QAAMC,YAAY,GAAGJ,OAAO,CAC1B,MAAO,OAAOE,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACC,KAAD,CAAzC,GAAmDD,QADhC,EAE1B,EAF0B,CAEtB;AAFsB,GAA5B;AAKA,QAAMG,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYH,YAAZ,CAApB;AAEA,QAAMI,aAAa,GAAGH,WAAW,CAACI,MAAZ,CACpB,CAACC,GAAD,EAAMC,IAAN,KACEL,MAAM,CAACM,MAAP,CAAcF,GAAd,EAAmB;AACjB;AACA,KAACC,IAAD,GAAQ,CAAC,GAAGE,OAAJ,KAAgBT,YAAY,CAACO,IAAD,CAAZ,CAAmBR,KAAnB,EAA0B,GAAGU,OAA7B;AAFP,GAAnB,CAFkB,EAMpB,EANoB,CAAtB;AASA,SAAO,EAAE,GAAGV,KAAL;AAAY,OAAGK;AAAf,GAAP;AACD,CAlBD;;AAoBA,eAAeP,YAAf","sourcesContent":["/*\n * Copyright (c) 2019-present, The Yumcoder Authors. All rights reserved.\n *\n * This source code is licensed under the license found in the LICENSE file in\n * the root directory of this source tree.\n */\nimport { useMemo } from 'react';\n\nconst withHandlers = handlers => (props = {}) => {\n  const realHandlers = useMemo(\n    () => (typeof handlers === 'function' ? handlers(props) : handlers),\n    [], // eslint-disable-line\n  );\n\n  const actionTypes = Object.keys(realHandlers);\n\n  const boundHandlers = actionTypes.reduce(\n    (obj, type) =>\n      Object.assign(obj, {\n        // note: handler = (props) => (payload) => {}\n        [type]: (...payload) => realHandlers[type](props)(...payload),\n      }),\n    {},\n  );\n\n  return { ...props, ...boundHandlers };\n};\n\nexport default withHandlers;\n"]},"metadata":{},"sourceType":"module"}