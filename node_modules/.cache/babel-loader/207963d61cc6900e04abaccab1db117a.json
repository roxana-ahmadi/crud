{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs3/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _defineProperty = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\"));\n\nvar _decode = _interopRequireDefault(require(\"./decode\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\n\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\n\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\n\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Contains all Parse API classes and functions.\n * @static\n * @global\n * @class\n * @hideconstructor\n */\n\n\nvar Parse = {\n  /**\n   * Call this method first to set up your authentication tokens for Parse.\n   * You can get your keys from the Data Browser on parse.com.\n   * @param {String} applicationId Your Parse Application ID.\n   * @param {String} javaScriptKey (optional) Your Parse JavaScript Key (Not needed for parse-server)\n   * @param {String} masterKey (optional) Your Parse Master Key. (Node.js only!)\n   * @static\n   */\n  initialize: function (applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  ) {\n    if (\"browser\" === 'browser' && _CoreManager.default.get('IS_NODE') && !process.env.SERVER_RENDERING) {\n      /* eslint-disable no-console */\n      console.log('It looks like you\\'re using the browser version of the SDK in a ' + 'node.js environment. You should require(\\'parse/node\\') instead.');\n      /* eslint-enable no-console */\n    }\n\n    Parse._initialize(applicationId, javaScriptKey);\n  },\n  _initialize: function (applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  , masterKey\n  /*: string*/\n  ) {\n    _CoreManager.default.set('APPLICATION_ID', applicationId);\n\n    _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n\n    _CoreManager.default.set('MASTER_KEY', masterKey);\n\n    _CoreManager.default.set('USE_MASTER_KEY', false);\n  },\n\n  /**\n   * Call this method to set your AsyncStorage engine\n   * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\n   * is not provided at a stable path and changes over versions.\n   * @param {AsyncStorage} storage a react native async storage.\n   * @static\n   */\n  setAsyncStorage: function (storage\n  /*: any*/\n  ) {\n    _CoreManager.default.setAsyncStorage(storage);\n  },\n\n  /**\n   * Call this method to set your LocalDatastoreStorage engine\n   * If using React-Native use {@link Parse.setAsyncStorage Parse.setAsyncStorage()}\n   * @param {LocalDatastoreController} controller a data storage.\n   * @static\n   */\n  setLocalDatastoreController: function (controller\n  /*: any*/\n  ) {\n    _CoreManager.default.setLocalDatastoreController(controller);\n  }\n};\n/** These legacy setters may eventually be deprecated **/\n\n/**\n * @member Parse.applicationId\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'applicationId', {\n  get: function () {\n    return _CoreManager.default.get('APPLICATION_ID');\n  },\n  set: function (value) {\n    _CoreManager.default.set('APPLICATION_ID', value);\n  }\n});\n/**\n * @member Parse.javaScriptKey\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'javaScriptKey', {\n  get: function () {\n    return _CoreManager.default.get('JAVASCRIPT_KEY');\n  },\n  set: function (value) {\n    _CoreManager.default.set('JAVASCRIPT_KEY', value);\n  }\n});\n/**\n * @member Parse.masterKey\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'masterKey', {\n  get: function () {\n    return _CoreManager.default.get('MASTER_KEY');\n  },\n  set: function (value) {\n    _CoreManager.default.set('MASTER_KEY', value);\n  }\n});\n/**\n * @member Parse.serverURL\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'serverURL', {\n  get: function () {\n    return _CoreManager.default.get('SERVER_URL');\n  },\n  set: function (value) {\n    _CoreManager.default.set('SERVER_URL', value);\n  }\n});\n/**\n * @member Parse.serverAuthToken\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'serverAuthToken', {\n  get: function () {\n    return _CoreManager.default.get('SERVER_AUTH_TOKEN');\n  },\n  set: function (value) {\n    _CoreManager.default.set('SERVER_AUTH_TOKEN', value);\n  }\n});\n/**\n * @member Parse.serverAuthType\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'serverAuthType', {\n  get: function () {\n    return _CoreManager.default.get('SERVER_AUTH_TYPE');\n  },\n  set: function (value) {\n    _CoreManager.default.set('SERVER_AUTH_TYPE', value);\n  }\n});\n/**\n * @member Parse.liveQueryServerURL\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'liveQueryServerURL', {\n  get: function () {\n    return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n  },\n  set: function (value) {\n    _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n  }\n});\n/**\n * @member Parse.encryptedUser\n * @type boolean\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'encryptedUser', {\n  get: function () {\n    return _CoreManager.default.get('ENCRYPTED_USER');\n  },\n  set: function (value) {\n    _CoreManager.default.set('ENCRYPTED_USER', value);\n  }\n});\n/**\n * @member Parse.secret\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'secret', {\n  get: function () {\n    return _CoreManager.default.get('ENCRYPTED_KEY');\n  },\n  set: function (value) {\n    _CoreManager.default.set('ENCRYPTED_KEY', value);\n  }\n});\n/* End setters */\n\nParse.ACL = require('./ParseACL').default;\nParse.Analytics = require('./Analytics');\nParse.AnonymousUtils = require('./AnonymousUtils').default;\nParse.Cloud = require('./Cloud');\nParse.CoreManager = require('./CoreManager');\nParse.Config = require('./ParseConfig').default;\nParse.Error = require('./ParseError').default;\nParse.FacebookUtils = require('./FacebookUtils').default;\nParse.File = require('./ParseFile').default;\nParse.GeoPoint = require('./ParseGeoPoint').default;\nParse.Polygon = require('./ParsePolygon').default;\nParse.Installation = require('./ParseInstallation').default;\nParse.LocalDatastore = require('./LocalDatastore');\nParse.Object = require('./ParseObject').default;\nParse.Op = {\n  Set: ParseOp.SetOp,\n  Unset: ParseOp.UnsetOp,\n  Increment: ParseOp.IncrementOp,\n  Add: ParseOp.AddOp,\n  Remove: ParseOp.RemoveOp,\n  AddUnique: ParseOp.AddUniqueOp,\n  Relation: ParseOp.RelationOp\n};\nParse.Push = require('./Push');\nParse.Query = require('./ParseQuery').default;\nParse.Relation = require('./ParseRelation').default;\nParse.Role = require('./ParseRole').default;\nParse.Schema = require('./ParseSchema').default;\nParse.Session = require('./ParseSession').default;\nParse.Storage = require('./Storage');\nParse.User = require('./ParseUser').default;\nParse.LiveQuery = require('./ParseLiveQuery').default;\nParse.LiveQueryClient = require('./LiveQueryClient').default;\n\nParse._request = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return _CoreManager.default.getRESTController().request.apply(null, args);\n};\n\nParse._ajax = function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return _CoreManager.default.getRESTController().ajax.apply(null, args);\n}; // We attempt to match the signatures of the legacy versions of these methods\n\n\nParse._decode = function (_, value) {\n  return (0, _decode.default)(value);\n};\n\nParse._encode = function (value, _, disallowObjects) {\n  return (0, _encode.default)(value, disallowObjects);\n};\n\nParse._getInstallationId = function () {\n  return _CoreManager.default.getInstallationController().currentInstallationId();\n};\n/**\n * Enable pinning in your application.\n * This must be called before your application can use pinning.\n *\n * @static\n */\n\n\nParse.enableLocalDatastore = function () {\n  Parse.LocalDatastore.isEnabled = true;\n};\n/**\n * Flag that indicates whether Local Datastore is enabled.\n *\n * @static\n */\n\n\nParse.isLocalDatastoreEnabled = function () {\n  return Parse.LocalDatastore.isEnabled;\n};\n/**\n * Gets all contents from Local Datastore\n *\n * <pre>\n * await Parse.dumpLocalDatastore();\n * </pre>\n *\n * @static\n */\n\n\nParse.dumpLocalDatastore = function () {\n  if (!Parse.LocalDatastore.isEnabled) {\n    console.log('Parse.enableLocalDatastore() must be called first'); // eslint-disable-line no-console\n\n    return _promise.default.resolve({});\n  } else {\n    return Parse.LocalDatastore._getAllContents();\n  }\n};\n/**\n * Enable the current user encryption.\n * This must be called before login any user.\n *\n * @static\n */\n\n\nParse.enableEncryptedUser = function () {\n  Parse.encryptedUser = true;\n};\n/**\n * Flag that indicates whether Encrypted User is enabled.\n *\n * @static\n */\n\n\nParse.isEncryptedUserEnabled = function () {\n  return Parse.encryptedUser;\n};\n\n_CoreManager.default.setCryptoController(_CryptoController.default);\n\n_CoreManager.default.setInstallationController(_InstallationController.default);\n\n_CoreManager.default.setRESTController(_RESTController.default); // For legacy requires, of the form `var Parse = require('parse').Parse`\n\n\nParse.Parse = Parse;\nmodule.exports = Parse;","map":{"version":3,"sources":["/home/roxana/React-Project/datafilter/node_modules/parse/lib/browser/Parse.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","_promise","_defineProperty","_decode","_encode","_CoreManager","_CryptoController","_InstallationController","ParseOp","_RESTController","Parse","initialize","applicationId","javaScriptKey","default","get","process","env","SERVER_RENDERING","console","log","_initialize","masterKey","set","setAsyncStorage","storage","setLocalDatastoreController","controller","value","ACL","Analytics","AnonymousUtils","Cloud","CoreManager","Config","Error","FacebookUtils","File","GeoPoint","Polygon","Installation","LocalDatastore","Object","Op","Set","SetOp","Unset","UnsetOp","Increment","IncrementOp","Add","AddOp","Remove","RemoveOp","AddUnique","AddUniqueOp","Relation","RelationOp","Push","Query","Role","Schema","Session","Storage","User","LiveQuery","LiveQueryClient","_request","_len","arguments","length","args","Array","_key","getRESTController","request","apply","_ajax","_len2","_key2","ajax","_","disallowObjects","_getInstallationId","getInstallationController","currentInstallationId","enableLocalDatastore","isEnabled","isLocalDatastoreEnabled","dumpLocalDatastore","resolve","_getAllContents","enableEncryptedUser","encryptedUser","isEncryptedUserEnabled","setCryptoController","setInstallationController","setRESTController","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs3/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _defineProperty = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\"));\n\nvar _decode = _interopRequireDefault(require(\"./decode\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\n\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\n\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\n\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Contains all Parse API classes and functions.\n * @static\n * @global\n * @class\n * @hideconstructor\n */\n\n\nvar Parse = {\n  /**\n   * Call this method first to set up your authentication tokens for Parse.\n   * You can get your keys from the Data Browser on parse.com.\n   * @param {String} applicationId Your Parse Application ID.\n   * @param {String} javaScriptKey (optional) Your Parse JavaScript Key (Not needed for parse-server)\n   * @param {String} masterKey (optional) Your Parse Master Key. (Node.js only!)\n   * @static\n   */\n  initialize: function (applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  ) {\n    if (\"browser\" === 'browser' && _CoreManager.default.get('IS_NODE') && !process.env.SERVER_RENDERING) {\n      /* eslint-disable no-console */\n      console.log('It looks like you\\'re using the browser version of the SDK in a ' + 'node.js environment. You should require(\\'parse/node\\') instead.');\n      /* eslint-enable no-console */\n    }\n\n    Parse._initialize(applicationId, javaScriptKey);\n  },\n  _initialize: function (applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  , masterKey\n  /*: string*/\n  ) {\n    _CoreManager.default.set('APPLICATION_ID', applicationId);\n\n    _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n\n    _CoreManager.default.set('MASTER_KEY', masterKey);\n\n    _CoreManager.default.set('USE_MASTER_KEY', false);\n  },\n\n  /**\n   * Call this method to set your AsyncStorage engine\n   * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\n   * is not provided at a stable path and changes over versions.\n   * @param {AsyncStorage} storage a react native async storage.\n   * @static\n   */\n  setAsyncStorage: function (storage\n  /*: any*/\n  ) {\n    _CoreManager.default.setAsyncStorage(storage);\n  },\n\n  /**\n   * Call this method to set your LocalDatastoreStorage engine\n   * If using React-Native use {@link Parse.setAsyncStorage Parse.setAsyncStorage()}\n   * @param {LocalDatastoreController} controller a data storage.\n   * @static\n   */\n  setLocalDatastoreController: function (controller\n  /*: any*/\n  ) {\n    _CoreManager.default.setLocalDatastoreController(controller);\n  }\n};\n/** These legacy setters may eventually be deprecated **/\n\n/**\n * @member Parse.applicationId\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'applicationId', {\n  get: function () {\n    return _CoreManager.default.get('APPLICATION_ID');\n  },\n  set: function (value) {\n    _CoreManager.default.set('APPLICATION_ID', value);\n  }\n});\n/**\n * @member Parse.javaScriptKey\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'javaScriptKey', {\n  get: function () {\n    return _CoreManager.default.get('JAVASCRIPT_KEY');\n  },\n  set: function (value) {\n    _CoreManager.default.set('JAVASCRIPT_KEY', value);\n  }\n});\n/**\n * @member Parse.masterKey\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'masterKey', {\n  get: function () {\n    return _CoreManager.default.get('MASTER_KEY');\n  },\n  set: function (value) {\n    _CoreManager.default.set('MASTER_KEY', value);\n  }\n});\n/**\n * @member Parse.serverURL\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'serverURL', {\n  get: function () {\n    return _CoreManager.default.get('SERVER_URL');\n  },\n  set: function (value) {\n    _CoreManager.default.set('SERVER_URL', value);\n  }\n});\n/**\n * @member Parse.serverAuthToken\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'serverAuthToken', {\n  get: function () {\n    return _CoreManager.default.get('SERVER_AUTH_TOKEN');\n  },\n  set: function (value) {\n    _CoreManager.default.set('SERVER_AUTH_TOKEN', value);\n  }\n});\n/**\n * @member Parse.serverAuthType\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'serverAuthType', {\n  get: function () {\n    return _CoreManager.default.get('SERVER_AUTH_TYPE');\n  },\n  set: function (value) {\n    _CoreManager.default.set('SERVER_AUTH_TYPE', value);\n  }\n});\n/**\n * @member Parse.liveQueryServerURL\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'liveQueryServerURL', {\n  get: function () {\n    return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n  },\n  set: function (value) {\n    _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n  }\n});\n/**\n * @member Parse.encryptedUser\n * @type boolean\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'encryptedUser', {\n  get: function () {\n    return _CoreManager.default.get('ENCRYPTED_USER');\n  },\n  set: function (value) {\n    _CoreManager.default.set('ENCRYPTED_USER', value);\n  }\n});\n/**\n * @member Parse.secret\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'secret', {\n  get: function () {\n    return _CoreManager.default.get('ENCRYPTED_KEY');\n  },\n  set: function (value) {\n    _CoreManager.default.set('ENCRYPTED_KEY', value);\n  }\n});\n/* End setters */\n\nParse.ACL = require('./ParseACL').default;\nParse.Analytics = require('./Analytics');\nParse.AnonymousUtils = require('./AnonymousUtils').default;\nParse.Cloud = require('./Cloud');\nParse.CoreManager = require('./CoreManager');\nParse.Config = require('./ParseConfig').default;\nParse.Error = require('./ParseError').default;\nParse.FacebookUtils = require('./FacebookUtils').default;\nParse.File = require('./ParseFile').default;\nParse.GeoPoint = require('./ParseGeoPoint').default;\nParse.Polygon = require('./ParsePolygon').default;\nParse.Installation = require('./ParseInstallation').default;\nParse.LocalDatastore = require('./LocalDatastore');\nParse.Object = require('./ParseObject').default;\nParse.Op = {\n  Set: ParseOp.SetOp,\n  Unset: ParseOp.UnsetOp,\n  Increment: ParseOp.IncrementOp,\n  Add: ParseOp.AddOp,\n  Remove: ParseOp.RemoveOp,\n  AddUnique: ParseOp.AddUniqueOp,\n  Relation: ParseOp.RelationOp\n};\nParse.Push = require('./Push');\nParse.Query = require('./ParseQuery').default;\nParse.Relation = require('./ParseRelation').default;\nParse.Role = require('./ParseRole').default;\nParse.Schema = require('./ParseSchema').default;\nParse.Session = require('./ParseSession').default;\nParse.Storage = require('./Storage');\nParse.User = require('./ParseUser').default;\nParse.LiveQuery = require('./ParseLiveQuery').default;\nParse.LiveQueryClient = require('./LiveQueryClient').default;\n\nParse._request = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return _CoreManager.default.getRESTController().request.apply(null, args);\n};\n\nParse._ajax = function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return _CoreManager.default.getRESTController().ajax.apply(null, args);\n}; // We attempt to match the signatures of the legacy versions of these methods\n\n\nParse._decode = function (_, value) {\n  return (0, _decode.default)(value);\n};\n\nParse._encode = function (value, _, disallowObjects) {\n  return (0, _encode.default)(value, disallowObjects);\n};\n\nParse._getInstallationId = function () {\n  return _CoreManager.default.getInstallationController().currentInstallationId();\n};\n/**\n * Enable pinning in your application.\n * This must be called before your application can use pinning.\n *\n * @static\n */\n\n\nParse.enableLocalDatastore = function () {\n  Parse.LocalDatastore.isEnabled = true;\n};\n/**\n * Flag that indicates whether Local Datastore is enabled.\n *\n * @static\n */\n\n\nParse.isLocalDatastoreEnabled = function () {\n  return Parse.LocalDatastore.isEnabled;\n};\n/**\n * Gets all contents from Local Datastore\n *\n * <pre>\n * await Parse.dumpLocalDatastore();\n * </pre>\n *\n * @static\n */\n\n\nParse.dumpLocalDatastore = function () {\n  if (!Parse.LocalDatastore.isEnabled) {\n    console.log('Parse.enableLocalDatastore() must be called first'); // eslint-disable-line no-console\n\n    return _promise.default.resolve({});\n  } else {\n    return Parse.LocalDatastore._getAllContents();\n  }\n};\n/**\n * Enable the current user encryption.\n * This must be called before login any user.\n *\n * @static\n */\n\n\nParse.enableEncryptedUser = function () {\n  Parse.encryptedUser = true;\n};\n/**\n * Flag that indicates whether Encrypted User is enabled.\n *\n * @static\n */\n\n\nParse.isEncryptedUserEnabled = function () {\n  return Parse.encryptedUser;\n};\n\n_CoreManager.default.setCryptoController(_CryptoController.default);\n\n_CoreManager.default.setInstallationController(_InstallationController.default);\n\n_CoreManager.default.setRESTController(_RESTController.default);\n\n// For legacy requires, of the form `var Parse = require('parse').Parse`\nParse.Parse = Parse;\nmodule.exports = Parse;"]},"metadata":{},"sourceType":"script"}