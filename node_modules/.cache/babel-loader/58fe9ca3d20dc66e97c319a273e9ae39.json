{"ast":null,"code":"var _jsxFileName = \"/home/roxana/React-Project/crud/src/App.jsx\";\nimport React from \"react\";\nimport TableView from \"./components/table/TableView\"; // const fields = Map({\n//   name: \"string\",\n//   id: \"number\",\n//   date: \"time\",\n//   boolean: \"boolean\"\n// });\n// const constraints = Map({\n//   string: [\n//     \"Contains\",\n//     \"StartsWith\",\n//     \"EndsWith\",\n//     \"EqualTo\",\n//     \"NotEqualTo\",\n//     \"GreaterThan\",\n//     \"LessThan\",\n//     \"GreaterThanOrEqualTo\",\n//     \"LessThanOrEqualTo\",\n//     \"IsEmpty\",\n//     \"NotIsEmpty\",\n//     \"IsNull\",\n//     \"NotIsNull\"\n//   ],\n//   number: [\n//     \"EqualTo\",\n//     \"NotEqualTo\",\n//     \"GreaterThan\",\n//     \"LessThan\",\n//     \"GreaterThanOrEqualTo\",\n//     \"LessThanOrEqualTo\",\n//     \"IsNull\",\n//     \"NotIsNull\"\n//   ],\n//   time: [\n//     \"EqualTo\",\n//     \"NotEqualTo\",\n//     \"GreaterThan\",\n//     \"LessThan\",\n//     \"GreaterThanOrEqualTo\",\n//     \"LessThanOrEqualTo\",\n//     \"IsNull\",\n//     \"NotIsNull\"\n//   ],\n//   boolean: [],\n//   default: [\n//     \"EqualTo\",\n//     \"NotEqualTo\",\n//     \"GreaterThan\",\n//     \"LessThan\",\n//     \"GreaterThanOrEqualTo\",\n//     \"LessThanOrEqualTo\",\n//     \"IsNull\",\n//     \"NotIsNull\"\n//   ]\n// });\n// const ClouseQuery = Parse.Object.extend(\"ClouseQuery\");\n// const mainQuery = new Parse.Query(ClouseQuery);\n// const filterData = {\n//   op: \"and\",\n//   childs: [],\n//   mainQuery,\n//   searchResults: []\n// };\n// let tmpdata;\n// const makeMainQuery = oprandData => {\n//   let mainQuery = new Parse.Query(ClouseQuery);\n//   if (oprandData.op === \"and\") {\n//     oprandData.childs.map(item => {\n//       if (!item.childs) {\n//         mainQuery = Parse.Query.and(mainQuery, item);\n//       } else {\n//         mainQuery = Parse.Query.and(mainQuery, item.mainQuery);\n//       }\n//     });\n//   } else {\n//     oprandData.childs.map(item => {\n//       if (!item.childs) {\n//         mainQuery = Parse.Query.or(mainQuery, item);\n//       } else {\n//         mainQuery = Parse.Query.or(mainQuery, item.mainQuery);\n//       }\n//     });\n//   }\n//   filterData.mainQuery = mainQuery;\n//   tmpdata = oprandData;\n//   mainQuery.find().then(result => {console.log(result)\n//     filterData.searchResults=result});\n//   console.log(filterData.searchResults,'app')\n// };\n\nfunction App() {\n  return React.createElement(TableView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/home/roxana/React-Project/crud/src/App.jsx"],"names":["React","TableView","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,8BAAtB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,SACQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR;AAGD;;AAED,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport TableView from \"./components/table/TableView\";\n\n\n// const fields = Map({\n//   name: \"string\",\n//   id: \"number\",\n//   date: \"time\",\n//   boolean: \"boolean\"\n// });\n\n// const constraints = Map({\n//   string: [\n//     \"Contains\",\n//     \"StartsWith\",\n//     \"EndsWith\",\n//     \"EqualTo\",\n//     \"NotEqualTo\",\n//     \"GreaterThan\",\n//     \"LessThan\",\n//     \"GreaterThanOrEqualTo\",\n//     \"LessThanOrEqualTo\",\n//     \"IsEmpty\",\n//     \"NotIsEmpty\",\n//     \"IsNull\",\n//     \"NotIsNull\"\n//   ],\n//   number: [\n//     \"EqualTo\",\n//     \"NotEqualTo\",\n//     \"GreaterThan\",\n//     \"LessThan\",\n//     \"GreaterThanOrEqualTo\",\n//     \"LessThanOrEqualTo\",\n//     \"IsNull\",\n//     \"NotIsNull\"\n//   ],\n//   time: [\n//     \"EqualTo\",\n//     \"NotEqualTo\",\n//     \"GreaterThan\",\n//     \"LessThan\",\n//     \"GreaterThanOrEqualTo\",\n//     \"LessThanOrEqualTo\",\n//     \"IsNull\",\n//     \"NotIsNull\"\n//   ],\n//   boolean: [],\n//   default: [\n//     \"EqualTo\",\n//     \"NotEqualTo\",\n//     \"GreaterThan\",\n//     \"LessThan\",\n//     \"GreaterThanOrEqualTo\",\n//     \"LessThanOrEqualTo\",\n//     \"IsNull\",\n//     \"NotIsNull\"\n//   ]\n// });\n\n// const ClouseQuery = Parse.Object.extend(\"ClouseQuery\");\n// const mainQuery = new Parse.Query(ClouseQuery);\n\n// const filterData = {\n//   op: \"and\",\n//   childs: [],\n//   mainQuery,\n//   searchResults: []\n// };\n\n// let tmpdata;\n\n// const makeMainQuery = oprandData => {\n//   let mainQuery = new Parse.Query(ClouseQuery);\n//   if (oprandData.op === \"and\") {\n//     oprandData.childs.map(item => {\n//       if (!item.childs) {\n//         mainQuery = Parse.Query.and(mainQuery, item);\n//       } else {\n//         mainQuery = Parse.Query.and(mainQuery, item.mainQuery);\n//       }\n//     });\n//   } else {\n//     oprandData.childs.map(item => {\n//       if (!item.childs) {\n//         mainQuery = Parse.Query.or(mainQuery, item);\n//       } else {\n//         mainQuery = Parse.Query.or(mainQuery, item.mainQuery);\n//       }\n//     });\n//   }\n//   filterData.mainQuery = mainQuery;\n//   tmpdata = oprandData;\n//   mainQuery.find().then(result => {console.log(result)\n//     filterData.searchResults=result});\n//   console.log(filterData.searchResults,'app')\n// };\n\nfunction App() {\n  return (\n          <TableView/> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}