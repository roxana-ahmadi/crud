{"ast":null,"code":"var _jsxFileName = \"/home/roxana/React-Project/crud/src/App.jsx\";\nimport React from \"react\";\nimport Parse from \"parse\";\nimport { Map } from \"immutable\";\nimport TableView from \"./components/table/TableView\";\nconst fields = Map({\n  name: \"string\",\n  id: \"number\",\n  date: \"time\",\n  boolean: \"boolean\"\n});\nconst constraints = Map({\n  string: [\"Contains\", \"StartsWith\", \"EndsWith\", \"EqualTo\", \"NotEqualTo\", \"GreaterThan\", \"LessThan\", \"GreaterThanOrEqualTo\", \"LessThanOrEqualTo\", \"IsEmpty\", \"NotIsEmpty\", \"IsNull\", \"NotIsNull\"],\n  number: [\"EqualTo\", \"NotEqualTo\", \"GreaterThan\", \"LessThan\", \"GreaterThanOrEqualTo\", \"LessThanOrEqualTo\", \"IsNull\", \"NotIsNull\"],\n  time: [\"EqualTo\", \"NotEqualTo\", \"GreaterThan\", \"LessThan\", \"GreaterThanOrEqualTo\", \"LessThanOrEqualTo\", \"IsNull\", \"NotIsNull\"],\n  boolean: [],\n  default: [\"EqualTo\", \"NotEqualTo\", \"GreaterThan\", \"LessThan\", \"GreaterThanOrEqualTo\", \"LessThanOrEqualTo\", \"IsNull\", \"NotIsNull\"]\n});\nconst ClouseQuery = Parse.Object.extend(\"ClouseQuery\");\nconst mainQuery = new Parse.Query(ClouseQuery);\nconst filterData = {\n  op: \"and\",\n  childs: [],\n  mainQuery,\n  searchResults: []\n};\nlet tmpdata;\n\nconst makeMainQuery = oprandData => {\n  let mainQuery = new Parse.Query(ClouseQuery);\n\n  if (oprandData.op === \"and\") {\n    oprandData.childs.map(item => {\n      if (!item.childs) {\n        mainQuery = Parse.Query.and(mainQuery, item);\n      } else {\n        mainQuery = Parse.Query.and(mainQuery, item.mainQuery);\n      }\n    });\n  } else {\n    oprandData.childs.map(item => {\n      if (!item.childs) {\n        mainQuery = Parse.Query.or(mainQuery, item);\n      } else {\n        mainQuery = Parse.Query.or(mainQuery, item.mainQuery);\n      }\n    });\n  }\n\n  filterData.mainQuery = mainQuery;\n  tmpdata = oprandData;\n  mainQuery.find().then(result => filterData.searchResults = result);\n  console.log(filterData.searchResults, 'app');\n};\n\nfunction App() {\n  return React.createElement(React.Fragment, null, React.createElement(TableView, {\n    makeMainQuery: makeMainQuery,\n    filterData: filterData,\n    constraints: constraints,\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/roxana/React-Project/crud/src/App.jsx"],"names":["React","Parse","Map","TableView","fields","name","id","date","boolean","constraints","string","number","time","default","ClouseQuery","Object","extend","mainQuery","Query","filterData","op","childs","searchResults","tmpdata","makeMainQuery","oprandData","map","item","and","or","find","then","result","console","log","App"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Parse from \"parse\";\nimport { Map } from \"immutable\";\nimport TableView from \"./components/table/TableView\";\n\n\nconst fields = Map({\n  name: \"string\",\n  id: \"number\",\n  date: \"time\",\n  boolean: \"boolean\"\n});\n\nconst constraints = Map({\n  string: [\n    \"Contains\",\n    \"StartsWith\",\n    \"EndsWith\",\n    \"EqualTo\",\n    \"NotEqualTo\",\n    \"GreaterThan\",\n    \"LessThan\",\n    \"GreaterThanOrEqualTo\",\n    \"LessThanOrEqualTo\",\n    \"IsEmpty\",\n    \"NotIsEmpty\",\n    \"IsNull\",\n    \"NotIsNull\"\n  ],\n  number: [\n    \"EqualTo\",\n    \"NotEqualTo\",\n    \"GreaterThan\",\n    \"LessThan\",\n    \"GreaterThanOrEqualTo\",\n    \"LessThanOrEqualTo\",\n    \"IsNull\",\n    \"NotIsNull\"\n  ],\n  time: [\n    \"EqualTo\",\n    \"NotEqualTo\",\n    \"GreaterThan\",\n    \"LessThan\",\n    \"GreaterThanOrEqualTo\",\n    \"LessThanOrEqualTo\",\n    \"IsNull\",\n    \"NotIsNull\"\n  ],\n  boolean: [],\n  default: [\n    \"EqualTo\",\n    \"NotEqualTo\",\n    \"GreaterThan\",\n    \"LessThan\",\n    \"GreaterThanOrEqualTo\",\n    \"LessThanOrEqualTo\",\n    \"IsNull\",\n    \"NotIsNull\"\n  ]\n});\n\nconst ClouseQuery = Parse.Object.extend(\"ClouseQuery\");\nconst mainQuery = new Parse.Query(ClouseQuery);\n\nconst filterData = {\n  op: \"and\",\n  childs: [],\n  mainQuery,\n  searchResults: []\n};\n\nlet tmpdata;\n\nconst makeMainQuery = oprandData => {\n  let mainQuery = new Parse.Query(ClouseQuery);\n  if (oprandData.op === \"and\") {\n    oprandData.childs.map(item => {\n      if (!item.childs) {\n        mainQuery = Parse.Query.and(mainQuery, item);\n      } else {\n        mainQuery = Parse.Query.and(mainQuery, item.mainQuery);\n      }\n    });\n  } else {\n    oprandData.childs.map(item => {\n      if (!item.childs) {\n        mainQuery = Parse.Query.or(mainQuery, item);\n      } else {\n        mainQuery = Parse.Query.or(mainQuery, item.mainQuery);\n      }\n    });\n  }\n  filterData.mainQuery = mainQuery;\n  tmpdata = oprandData;\n  mainQuery.find().then(result => filterData.searchResults=result);\n  console.log(filterData.searchResults,'app')\n};\n\nfunction App() {\n  return (\n    <>\n     \n          <TableView\n            makeMainQuery={makeMainQuery}\n            filterData={filterData}\n            constraints={constraints}\n            fields={fields}\n          />\n       \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}