{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.send = send;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n/**\n * Contains functions to deal with Push in Parse.\n * @class Parse.Push\n * @static\n * @hideconstructor\n */\n\n/**\n  * Sends a push notification.\n  * @method send\n  * @name Parse.Push.send\n  * @param {Object} data -  The data of the push notification.  Valid fields\n  * are:\n  *   <ol>\n  *     <li>channels - An Array of channels to push to.</li>\n  *     <li>push_time - A Date object for when to send the push.</li>\n  *     <li>expiration_time -  A Date object for when to expire\n  *         the push.</li>\n  *     <li>expiration_interval - The seconds from now to expire the push.</li>\n  *     <li>where - A Parse.Query over Parse.Installation that is used to match\n  *         a set of installations to push to.</li>\n  *     <li>data - The data to send as part of the push</li>\n  *   <ol>\n  * @param {Object} options An object that has an optional success function,\n  * that takes no arguments and will be called on a successful push, and\n  * an error function that takes a Parse.Error and will be called if the push\n  * failed.\n  * @return {Promise} A promise that is fulfilled when the push request\n  *     completes.\n  */\n\n\nfunction send(data\n/*: PushData*/\n, options\n/*:: ?: { useMasterKey?: boolean, success?: any, error?: any }*/\n)\n/*: Promise*/\n{\n  options = options || {};\n\n  if (data.where && data.where instanceof _ParseQuery.default) {\n    data.where = data.where.toJSON().where;\n  }\n\n  if (data.push_time && (0, _typeof2.default)(data.push_time) === 'object') {\n    data.push_time = data.push_time.toJSON();\n  }\n\n  if (data.expiration_time && (0, _typeof2.default)(data.expiration_time) === 'object') {\n    data.expiration_time = data.expiration_time.toJSON();\n  }\n\n  if (data.expiration_time && data.expiration_interval) {\n    throw new Error('expiration_time and expiration_interval cannot both be set.');\n  }\n\n  return _CoreManager.default.getPushController().send(data, {\n    useMasterKey: options.useMasterKey\n  });\n}\n\nvar DefaultController = {\n  send: function (data\n  /*: PushData*/\n  , options\n  /*: RequestOptions*/\n  ) {\n    var RESTController = _CoreManager.default.getRESTController();\n\n    var request = RESTController.request('POST', 'push', data, {\n      useMasterKey: !!options.useMasterKey\n    });\n    return request;\n  }\n};\n\n_CoreManager.default.setPushController(DefaultController);","map":{"version":3,"sources":["/home/roxana/React-Project/datafilter/node_modules/parse/lib/browser/Push.js"],"names":["_interopRequireDefault","require","_Object$defineProperty","exports","value","send","_typeof2","_CoreManager","_ParseQuery","data","options","where","default","toJSON","push_time","expiration_time","expiration_interval","Error","getPushController","useMasterKey","DefaultController","RESTController","getRESTController","request","setPushController"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,sDAAD,CAApC;;AAEA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,8DAAD,CAApC;;AAEAC,sBAAsB,CAACC,OAAD,EAAU,YAAV,EAAwB;AAC5CC,EAAAA,KAAK,EAAE;AADqC,CAAxB,CAAtB;;AAIAD,OAAO,CAACE,IAAR,GAAeA,IAAf;;AAEA,IAAIC,QAAQ,GAAGN,sBAAsB,CAACC,OAAO,CAAC,uCAAD,CAAR,CAArC;;AAEA,IAAIM,YAAY,GAAGP,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAzC;;AAEA,IAAIO,WAAW,GAAGR,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAxC;AACA;;;;;;;;;;;AAWA;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAASI,IAAT,CAAcI;AACd;AADA,EAEEC;AACF;AAHA;AAKA;AACA;AACEA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AAEA,MAAID,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACE,KAAL,YAAsBH,WAAW,CAACI,OAApD,EAA6D;AAC3DH,IAAAA,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACE,KAAL,CAAWE,MAAX,GAAoBF,KAAjC;AACD;;AAED,MAAIF,IAAI,CAACK,SAAL,IAAkB,CAAC,GAAGR,QAAQ,CAACM,OAAb,EAAsBH,IAAI,CAACK,SAA3B,MAA0C,QAAhE,EAA0E;AACxEL,IAAAA,IAAI,CAACK,SAAL,GAAiBL,IAAI,CAACK,SAAL,CAAeD,MAAf,EAAjB;AACD;;AAED,MAAIJ,IAAI,CAACM,eAAL,IAAwB,CAAC,GAAGT,QAAQ,CAACM,OAAb,EAAsBH,IAAI,CAACM,eAA3B,MAAgD,QAA5E,EAAsF;AACpFN,IAAAA,IAAI,CAACM,eAAL,GAAuBN,IAAI,CAACM,eAAL,CAAqBF,MAArB,EAAvB;AACD;;AAED,MAAIJ,IAAI,CAACM,eAAL,IAAwBN,IAAI,CAACO,mBAAjC,EAAsD;AACpD,UAAM,IAAIC,KAAJ,CAAU,6DAAV,CAAN;AACD;;AAED,SAAOV,YAAY,CAACK,OAAb,CAAqBM,iBAArB,GAAyCb,IAAzC,CAA8CI,IAA9C,EAAoD;AACzDU,IAAAA,YAAY,EAAET,OAAO,CAACS;AADmC,GAApD,CAAP;AAGD;;AAED,IAAIC,iBAAiB,GAAG;AACtBf,EAAAA,IAAI,EAAE,UAAUI;AAChB;AADM,IAEJC;AACF;AAHM,IAIJ;AACA,QAAIW,cAAc,GAAGd,YAAY,CAACK,OAAb,CAAqBU,iBAArB,EAArB;;AAEA,QAAIC,OAAO,GAAGF,cAAc,CAACE,OAAf,CAAuB,MAAvB,EAA+B,MAA/B,EAAuCd,IAAvC,EAA6C;AACzDU,MAAAA,YAAY,EAAE,CAAC,CAACT,OAAO,CAACS;AADiC,KAA7C,CAAd;AAGA,WAAOI,OAAP;AACD;AAZqB,CAAxB;;AAeAhB,YAAY,CAACK,OAAb,CAAqBY,iBAArB,CAAuCJ,iBAAvC","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.send = send;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n/**\n * Contains functions to deal with Push in Parse.\n * @class Parse.Push\n * @static\n * @hideconstructor\n */\n\n/**\n  * Sends a push notification.\n  * @method send\n  * @name Parse.Push.send\n  * @param {Object} data -  The data of the push notification.  Valid fields\n  * are:\n  *   <ol>\n  *     <li>channels - An Array of channels to push to.</li>\n  *     <li>push_time - A Date object for when to send the push.</li>\n  *     <li>expiration_time -  A Date object for when to expire\n  *         the push.</li>\n  *     <li>expiration_interval - The seconds from now to expire the push.</li>\n  *     <li>where - A Parse.Query over Parse.Installation that is used to match\n  *         a set of installations to push to.</li>\n  *     <li>data - The data to send as part of the push</li>\n  *   <ol>\n  * @param {Object} options An object that has an optional success function,\n  * that takes no arguments and will be called on a successful push, and\n  * an error function that takes a Parse.Error and will be called if the push\n  * failed.\n  * @return {Promise} A promise that is fulfilled when the push request\n  *     completes.\n  */\n\n\nfunction send(data\n/*: PushData*/\n, options\n/*:: ?: { useMasterKey?: boolean, success?: any, error?: any }*/\n)\n/*: Promise*/\n{\n  options = options || {};\n\n  if (data.where && data.where instanceof _ParseQuery.default) {\n    data.where = data.where.toJSON().where;\n  }\n\n  if (data.push_time && (0, _typeof2.default)(data.push_time) === 'object') {\n    data.push_time = data.push_time.toJSON();\n  }\n\n  if (data.expiration_time && (0, _typeof2.default)(data.expiration_time) === 'object') {\n    data.expiration_time = data.expiration_time.toJSON();\n  }\n\n  if (data.expiration_time && data.expiration_interval) {\n    throw new Error('expiration_time and expiration_interval cannot both be set.');\n  }\n\n  return _CoreManager.default.getPushController().send(data, {\n    useMasterKey: options.useMasterKey\n  });\n}\n\nvar DefaultController = {\n  send: function (data\n  /*: PushData*/\n  , options\n  /*: RequestOptions*/\n  ) {\n    var RESTController = _CoreManager.default.getRESTController();\n\n    var request = RESTController.request('POST', 'push', data, {\n      useMasterKey: !!options.useMasterKey\n    });\n    return request;\n  }\n};\n\n_CoreManager.default.setPushController(DefaultController);"]},"metadata":{},"sourceType":"script"}