{"ast":null,"code":"var _jsxFileName = \"/home/roxana/React-Project/crud/src/components/table/TableView.js\";\nimport React from 'react';\nimport Parse from 'parse';\nimport { Map } from 'immutable';\nimport { Table, Divider, Button, Input, Icon, Row, Col, PageHeader, Modal } from 'antd';\nimport tableController from './tableController';\nimport OprandView from '../oprand/OprandView';\nconst fields = Map({\n  name: 'string',\n  id: 'number',\n  date: 'time',\n  boolean: 'boolean'\n});\nconst constraints = Map({\n  string: ['Contains', 'StartsWith', 'EndsWith', 'EqualTo', 'NotEqualTo', 'GreaterThan', 'LessThan', 'GreaterThanOrEqualTo', 'LessThanOrEqualTo', 'IsEmpty', 'NotIsEmpty', 'IsNull', 'NotIsNull'],\n  number: ['EqualTo', 'NotEqualTo', 'GreaterThan', 'LessThan', 'GreaterThanOrEqualTo', 'LessThanOrEqualTo', 'IsNull', 'NotIsNull'],\n  time: ['EqualTo', 'NotEqualTo', 'GreaterThan', 'LessThan', 'GreaterThanOrEqualTo', 'LessThanOrEqualTo', 'IsNull', 'NotIsNull'],\n  boolean: [],\n  default: ['EqualTo', 'NotEqualTo', 'GreaterThan', 'LessThan', 'GreaterThanOrEqualTo', 'LessThanOrEqualTo', 'IsNull', 'NotIsNull']\n});\n\nconst TableView = () => {\n  const {\n    data,\n    addPerson,\n    setPersonName,\n    deletePerson,\n    editPerson,\n    confirmEdit,\n    makeMainQuery\n  } = tableController();\n  const columns = [{\n    title: 'objectId',\n    dataIndex: 'objectId',\n    key: 'objectId'\n  }, {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, text)\n  }, {\n    title: 'createdAt',\n    dataIndex: 'createdAt',\n    key: 'createdAt'\n  }, {\n    title: 'updatedAt',\n    dataIndex: 'updatedAt',\n    key: 'updatedAt'\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"delete\",\n      key: \"delete\",\n      onClick: () => deletePerson(record.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      type: \"vertical\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Icon, {\n      type: \"edit\",\n      key: \"edit\",\n      onClick: () => editPerson(record.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))\n  }];\n  const ClouseQuery = Parse.Object.extend('ClouseQuery');\n  const mainQuery = new Parse.Query(ClouseQuery);\n  const filterData = {\n    op: 'and',\n    childs: [],\n    mainQuery,\n    searchResults: []\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(PageHeader, {\n    style: {\n      background: 'blue'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    bodyStyle: {\n      height: 'maxContent'\n    },\n    visible: true,\n    title: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(OprandView, {\n    makeMainQuery: makeMainQuery,\n    filterData: filterData,\n    constraints: constraints,\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })), React.createElement(OprandView, {\n    makeMainQuery: makeMainQuery,\n    filterData: filterData,\n    constraints: constraints,\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, data.editing && React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Edit Mode\"), React.createElement(Input, {\n    placeholder: \"name\",\n    value: data.personName,\n    onChange: e => setPersonName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(Col, {\n    span: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, !data.editing && React.createElement(Button, {\n    onClick: () => addPerson(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"add\"), data.editing && React.createElement(Button, {\n    onClick: () => confirmEdit(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"confirm edit\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Col, {\n    span: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Table, {\n    style: {\n      padding: 24\n    },\n    columns: columns,\n    dataSource: data.personsList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }))));\n};\n\nexport default TableView;","map":{"version":3,"sources":["/home/roxana/React-Project/crud/src/components/table/TableView.js"],"names":["React","Parse","Map","Table","Divider","Button","Input","Icon","Row","Col","PageHeader","Modal","tableController","OprandView","fields","name","id","date","boolean","constraints","string","number","time","default","TableView","data","addPerson","setPersonName","deletePerson","editPerson","confirmEdit","makeMainQuery","columns","title","dataIndex","key","render","text","record","ClouseQuery","Object","extend","mainQuery","Query","filterData","op","childs","searchResults","background","height","editing","personName","e","target","value","padding","personsList"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Parse from 'parse';\nimport { Map } from 'immutable';\nimport {\n  Table, Divider, Button, Input, Icon, Row, Col, PageHeader, Modal,\n} from 'antd';\nimport tableController from './tableController';\nimport OprandView from '../oprand/OprandView';\n\n\nconst fields = Map({\n  name: 'string',\n  id: 'number',\n  date: 'time',\n  boolean: 'boolean',\n});\n\nconst constraints = Map({\n  string: [\n    'Contains',\n    'StartsWith',\n    'EndsWith',\n    'EqualTo',\n    'NotEqualTo',\n    'GreaterThan',\n    'LessThan',\n    'GreaterThanOrEqualTo',\n    'LessThanOrEqualTo',\n    'IsEmpty',\n    'NotIsEmpty',\n    'IsNull',\n    'NotIsNull',\n  ],\n  number: [\n    'EqualTo',\n    'NotEqualTo',\n    'GreaterThan',\n    'LessThan',\n    'GreaterThanOrEqualTo',\n    'LessThanOrEqualTo',\n    'IsNull',\n    'NotIsNull',\n  ],\n  time: [\n    'EqualTo',\n    'NotEqualTo',\n    'GreaterThan',\n    'LessThan',\n    'GreaterThanOrEqualTo',\n    'LessThanOrEqualTo',\n    'IsNull',\n    'NotIsNull',\n  ],\n  boolean: [],\n  default: [\n    'EqualTo',\n    'NotEqualTo',\n    'GreaterThan',\n    'LessThan',\n    'GreaterThanOrEqualTo',\n    'LessThanOrEqualTo',\n    'IsNull',\n    'NotIsNull',\n  ],\n});\n\n\nconst TableView = () => {\n  const {\n    data,\n    addPerson,\n    setPersonName,\n    deletePerson,\n    editPerson,\n    confirmEdit,\n    makeMainQuery,\n\n  } = tableController();\n\n\n  const columns = [\n    {\n      title: 'objectId',\n      dataIndex: 'objectId',\n      key: 'objectId',\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text) => <a>{text}</a>,\n    },\n    {\n      title: 'createdAt',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n    },\n    {\n      title: 'updatedAt',\n      dataIndex: 'updatedAt',\n      key: 'updatedAt',\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (text, record) => (\n        <span>\n          <Icon type=\"delete\" key=\"delete\" onClick={() => deletePerson(record.key)} />\n          <Divider type=\"vertical\" />\n          <Icon type=\"edit\" key=\"edit\" onClick={() => editPerson(record.key)} />\n        </span>\n      ),\n    },\n  ];\n\n  const ClouseQuery = Parse.Object.extend('ClouseQuery');\n  const mainQuery = new Parse.Query(ClouseQuery);\n\n  const filterData = {\n    op: 'and',\n    childs: [],\n    mainQuery,\n    searchResults: [],\n  };\n\n\n  return (\n    <div>\n      <PageHeader style={{ background: 'blue' }}>\n        <Modal\n          bodyStyle={{ height: 'maxContent' }}\n          visible\n          title=\"Title\"\n        >\n          <OprandView\n            makeMainQuery={makeMainQuery}\n            filterData={filterData}\n            constraints={constraints}\n            fields={fields}\n          />\n        </Modal>\n        <OprandView\n          makeMainQuery={makeMainQuery}\n          filterData={filterData}\n          constraints={constraints}\n          fields={fields}\n        />\n      </PageHeader>\n\n\n      <Row>\n        <Col span={8}>\n          {data.editing\n            && <h1>Edit Mode</h1>}\n          <Input placeholder=\"name\" value={data.personName} onChange={(e) => setPersonName(e.target.value)} />\n        </Col>\n        <Col span={8}>\n          {!data.editing\n            && <Button onClick={() => addPerson()}>add</Button>}\n          {data.editing\n            && <Button onClick={() => confirmEdit()}>confirm edit</Button>}\n        </Col>\n      </Row>\n      <Row>\n        <Col span={12}>\n          <Table style={{ padding: 24 }} columns={columns} dataSource={data.personsList} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default TableView;\n"]},"metadata":{},"sourceType":"module"}